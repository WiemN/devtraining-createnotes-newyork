<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function($scope,$rootScope,spModal,spUtil) {
	/* widget controller */
	var c = this;

	$rootScope.$on('selectNote', function(event,data) {
		c.server.get({
			action: 'getNote',
			noteID: $rootScope.noteID
		}).then(function(r) {
			c.data.title = r.data.note.title;
			c.data.note = r.data.note.note;
			c.data.noteID = r.data.note.sys_id;
		});
	});
	
	c.newNote = function () {
		c.server.get({
			action: 'newNote'
		}).then(function(r) {
			c.data.notes.unshift(r.data.newNote);
			c.data.noteID = r.data.noteID;
			$rootScope.noteID = c.data.noteID;
			$rootScope.$emit('SelectNote', c.data.noteID);
		});
	}
	
	$rootScope.$on('deleteNote', function(event,data) {
		c.data.notes.splice($scope.notePos, 1);
	});
	
	c.snNoteUpdate = function(name,sysID){

		for (var i=0;i<c.data.notes.length;i++){
			if(c.data.notes[i].sys_id == name.data.sys_id){
				if(name.data.record.note){
					c.data.notes[i].note = name.data.record.note.display_value;
				}
				if(name.data.record.title){
					c.data.notes[i].title = name.data.record.title.display_value;
				}
				c.server.update();

			}
		}
	}

	// Record removed from data object on the server and passed back to client
	c.snNoteDelete = function(sysID){

		c.server.get({
			action: 'snDeleteNote',
			noteID: sysID

		}).then(function(r){
			c.data.notes = r.data.notes;
		});

	}

// record watch
spUtil.recordWatch($scope, "x_snc_createnotes_note", "numberANYTHING", function(name) {
		console.log(name.data.operation); 
		console.log(name); 
	// Calls a Client Script function to do the update and pass the updated data object
	// to the server.
	if(name.data.operation == "update"){
		c.snNoteUpdate(name, name.data.sys_id);
	}
	// Calls a Client Script function which does the update on the server and passes
	// the updated data object back to the client.
	if(name.data.operation == "delete"){
		c.snNoteDelete(name.data.sys_id);
	}
	
		if(name.data.operation == "insert"){
		c.server.refresh();
	  }
	  });

	c.updateNote = function(updateType) {
		c.server.get({
			action: 'updateNote',
			noteID: c.data.noteID,
			noteBody: c.data.note,
			noteTitle: c.data.title
		}).then(function(r) {
			// When the promise is returned, emit the change
			if (updateType == 'title' || updateType == 'body') { 
				$rootScope.$emit('updateTitle', r.data); 
			}
		});
	}
	c.deleteNote = function() {
		c.server.get({
			action: 'deleteNote',
			noteID: c.data.noteID
		}).then(function(r) {
			spUtil.addTrivialMessage("The " + c.data.title + " record has been deleted.");
			$rootScope.$emit('deleteNote', c.data.noteID);
			c.data.title = '';
			c.data.note = '';
			c.data.noteID = '';
		});
	}
	c.confirmDelete = function(){
     spModal.confirm("Are you sure you want to delete this Note record?").then(function(confirmed){
       if(confirmed){
       c.deleteNote();
       }
     });
   }
}
]]></client_script>
        <controller_as>c</controller_as>
        <css/>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>notes__body</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>Notes  Body</name>
        <option_schema>[{"hint":"Specify a title for the Notes List widget","name":"title","section":"other","default_value":"Notes","label":"Title","type":"string"},{"hint":"Select the maximum number of records to display","name":"maximum_records_to_display","section":"other","default_value":"5","label":"Maximum records to display","type":"choice"}]</option_schema>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {

	if (input && input.noteID) {
		var note = new GlideRecord('x_snc_createnotes_note');
		if (note.get(input.noteID)) {
			if (input.action == 'getNote') {
				data.note = {};
				$sp.getRecordValues(data.note, note, "title, note, sys_id");
			}
			else if (input.action == 'newNote') {
				var newNote = new GlideRecord('x_snc_createnotes_notes');
				newNote.newRecord();
				var id = newNote.insert();
				data.noteID = id;
				data.newNote = {};
				$sp.getRecordValues(data.newNote, newNote,"title,note,sys_id");
			}
			if (input.action == 'snDeleteNote') {
			var delNote = new GlideRecord('x_snc_createnotes_note');
			// The notes record should already be gone.  Just
			// making sure it no longer exists.
			if(delNote.get(input.noteID)){
				delNote.deleteRecord();
			}
		}
			
			else if (input.action == 'updateNote') { 
				note.title = input.noteTitle; 
				note.note = input.noteBody; 
				note.update(); 
				// Need to update the data object with the new title
				// and first 20 characters of the note (do not want to write huge
				// strings to the Notes List widget)
				data.title = note.getValue('title');
				data.note = note.getValue('note').slice(0,20);
			}

			else if (input.action == 'deleteNote') { 
				note.deleteRecord(); 
			}
		}
	}
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2019-05-30 18:16:57</sys_created_on>
        <sys_id>7a7543e8db3133000613a08a4896195e</sys_id>
        <sys_mod_count>26</sys_mod_count>
        <sys_name>Notes  Body</sys_name>
        <sys_package display_value="CreateNotes" source="x_snc_createnotes">df5fd9a5090232007f44e1046c8ff69f</sys_package>
        <sys_policy/>
        <sys_scope display_value="CreateNotes">df5fd9a5090232007f44e1046c8ff69f</sys_scope>
        <sys_update_name>sp_widget_7a7543e8db3133000613a08a4896195e</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2019-11-04 10:04:24</sys_updated_on>
        <template><![CDATA[<div class="panel panel-default" ng-show="c.data.noteID">
  <div class="panel-heading clearfix">
    <h3 class="panel-title pull-left">
      {{::c.options.title}}
    </h3>
    <div class="row">
      <div class="col-md-11">
        <input class="form-control" id="note-title" ng-model="c.data.title" ng-change="c.updateNote('title')" ng-model-options="{debounce: 1000}"/>
      </div>
      <!-- On va remplaer ce code par un directive
      <div class="col-md-1"> 
        <button class="btn btn-danger pull-right" ng-click="c.deleteNote()"> 
          <span class="glyphicon glyphicon-trash"></span> 
        </button> 
      </div> --> 
      <delete-button-confirm></delete-button-confirm>
    </div>
  </div>
  <div class="panel-body">
    <textarea class="form-control" id="note-body" ng-model="c.data.note" ng-change="c.updateNote('body')" ng-model-options="{debounce: 1000}" ></textarea>
  </div>
</div>]]></template>
    </sp_widget>
</record_update>
